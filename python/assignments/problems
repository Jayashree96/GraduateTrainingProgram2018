problems 7th september 2018
submission by j.varadharajulu@accenture.com
1.Given a full name, your task is to capitalize the name appropriately, in a word only the first character is capitalized.
 full_name=raw_input("Enter full name:")
 split_name=full_name.split(' ')
 cap_name=[]
 for i in split_namename:
     cap_name.append(i.capitalize())
 print(" ".join(cap_name))
2.You have a record of  students. Each record contains the student's name, and their percent marks in Maths, Physics and Chemistry. The marks can be floating values. The user enters some integer  followed by the names and marks for students. You are required to save the record in a dictionary data type. The user then enters a student's name. Output the average percentage marks obtained by that student, correct to two decimal places.
 stud_details={}
 count=int(input("enter student count:"))
 for i in range(count):
     inp=input("enter student name and marks:")
     inp=inp.split(" ")
     key=inp.pop(0)
     mark=[]
     for j in range(len(inp)):
         mark.append(int(inp[j]))
         stud_details[key]=mark
 name=input("enter name to get average:")
 avg=sum(stud_details[name])/len(stud_details[name])
 print(avg)
3.You are given two values a and b . 
Perform integer division and print a/b .This error is raised when the second argument of a division or modulo operation is zero.
 def excep_fn():
 try:
  print int(a)/int(b)
 except Exception as error:
  print(error)

count=int(raw_input("enter the count"))
for i in range(count):
 a=raw_input("enter 1st value")
 b=raw_input("enter 2nd value")
 excep_fn()
4.Consider a list (list = []). You can perform the following commands:

insert i e: Insert integer e at position i.
print: Print the list.
remove e: Delete the first occurrence of integer e.
append e: Insert integer e at the end of the list.
sort: Sort the list.
pop: Pop the last element from the list.
reverse: Reverse the list.
Initialize your list and read in the value of  followed by  lines of commands where each command will be of the 7 types listed above. Iterate through each command in order and perform the corresponding operation on your list.

dict_com={}
li=[]
n=input("Enter the no of commands")
for i in range(n):
      com=raw_input();
      l1=com.split(" ")
      dict_com[i]=l1
for i in range(n):
      if(dict_com[i][0]=="insert"):
           li.insert(int(dict[i][1]),int(dict[i][2]))
      elif(dict_com[i][0]=="print"):
           print li
      elif(dict_com[i][0]=="remove"):
           li.remove(int(dict[i][1]))
      elif(dict_com[i][0]=="append"):
           li.append(int(dict[i][1]))
      elif(dict_com[i][0]=="sort"):
           li.sort()
      elif(dict_com[i][0]=="pop"):
           li.pop(len(l)-1)
      elif(dict_com[i][0]=="reverse"):
           li.reverse()

6.Your job is to find whether set A is a subset of set B .If set A is subset of set B , print True.
If set A is not a subset of set B , print False.
Input Format:-
The first line will contain the number of test cases, T . 
The first line of each test case contains the number of elements in set A .
The second line of each test case contains the space separated elements of set A .
The third line of each test case contains the number of elements in set B .
The fourth line of each test case contains the space separated elements of set B .

tc=int(input("enter the number of test cases:"))
list_set = []
for i in range(tc):
    no = int(input("enter the number of elements for set 1:"))
    ele = input("enter the elements:")
    ele_list = ele.split(" ")
    if no == len(ele_list):
     no1 = int(input("enter the number of elements for set 2:"))
     ele1 = input("enter the elements:")
     ele_list1 = ele1.split(" ")
     if no1 == len(ele_list1):
       print(ele_list)
       print(ele_list1)
       list_set.append(set(ele_list).issubset(set(ele_list1)))
     else:
       print("enter valid numbers")
    else:
      print("enter valid numbers")
for k in list_set:
    print(k)


 
